file: CNAME CONJ CNAME LPAREN RBRACKET
##
## Ends in an error in state: 114.
##
## separated_nonempty_list(CONJ,literals) -> CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME CONJ CNAME LPAREN RPAREN VNAME
##
## Ends in an error in state: 116.
##
## separated_nonempty_list(CONJ,literals) -> CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME CONJ CNAME LPAREN VNAME RBRACKET
##
## Ends in an error in state: 115.
##
## separated_nonempty_list(CONJ,literals) -> CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN loption(separated_nonempty_list(COMMA,term))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
## In state 27, spurious reduction of production separated_nonempty_list(COMMA,term) -> term
## In state 31, spurious reduction of production loption(separated_nonempty_list(COMMA,term)) -> separated_nonempty_list(COMMA,term)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME CONJ CNAME VNAME
##
## Ends in an error in state: 113.
##
## separated_nonempty_list(CONJ,literals) -> CNAME . [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> CNAME . CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
##
## The known suffix of the stack is as follows:
## CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME CONJ COLON RPAREN
##
## Ends in an error in state: 104.
##
## separated_nonempty_list(CONJ,literals) -> COLON . separated_nonempty_list(COMMA,ground_literal) COLON CNAME [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON . separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON . separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON . separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON . separated_nonempty_list(COMMA,ground_literal) COLON CNAME CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON . separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON . separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON . separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
##
## The known suffix of the stack is as follows:
## COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME CONJ COLON VNAME NEQ VNAME COLON CNAME LPAREN RBRACKET
##
## Ends in an error in state: 125.
##
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME CONJ COLON VNAME NEQ VNAME COLON CNAME LPAREN RPAREN VNAME
##
## Ends in an error in state: 127.
##
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME CONJ COLON VNAME NEQ VNAME COLON CNAME LPAREN VNAME RBRACKET
##
## Ends in an error in state: 126.
##
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
## In state 27, spurious reduction of production separated_nonempty_list(COMMA,term) -> term
## In state 31, spurious reduction of production loption(separated_nonempty_list(COMMA,term)) -> separated_nonempty_list(COMMA,term)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME CONJ COLON VNAME NEQ VNAME COLON CNAME VNAME
##
## Ends in an error in state: 124.
##
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME . [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME . CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME CONJ COLON VNAME NEQ VNAME COLON NOT CNAME LPAREN RBRACKET
##
## Ends in an error in state: 109.
##
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME CONJ COLON VNAME NEQ VNAME COLON NOT CNAME LPAREN RPAREN VNAME
##
## Ends in an error in state: 111.
##
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME CONJ COLON VNAME NEQ VNAME COLON NOT CNAME LPAREN VNAME RBRACKET
##
## Ends in an error in state: 110.
##
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
## In state 27, spurious reduction of production separated_nonempty_list(COMMA,term) -> term
## In state 31, spurious reduction of production loption(separated_nonempty_list(COMMA,term)) -> separated_nonempty_list(COMMA,term)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME CONJ COLON VNAME NEQ VNAME COLON NOT CNAME VNAME
##
## Ends in an error in state: 108.
##
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME . [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME . CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME CONJ COLON VNAME NEQ VNAME COLON NOT VNAME
##
## Ends in an error in state: 107.
##
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT . CNAME [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT . CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT . CNAME CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT . CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME CONJ COLON VNAME NEQ VNAME COLON VNAME
##
## Ends in an error in state: 106.
##
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON . CNAME [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON . CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON . NOT CNAME [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON . NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON . CNAME CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON . CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON . NOT CNAME CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON . NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME CONJ COLON VNAME NEQ VNAME DEFINE
##
## Ends in an error in state: 105.
##
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) . COLON CNAME [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) . COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) . COLON NOT CNAME [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) . COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) . COLON CNAME CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) . COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) . COLON NOT CNAME CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) . COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
## In state 63, spurious reduction of production separated_nonempty_list(COMMA,ground_literal) -> term coperator term
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME CONJ NOT CNAME LPAREN RBRACKET
##
## Ends in an error in state: 100.
##
## separated_nonempty_list(CONJ,literals) -> NOT CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> NOT CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
##
## The known suffix of the stack is as follows:
## NOT CNAME LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME CONJ NOT CNAME LPAREN RPAREN VNAME
##
## Ends in an error in state: 102.
##
## separated_nonempty_list(CONJ,literals) -> NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
##
## The known suffix of the stack is as follows:
## NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME CONJ NOT CNAME LPAREN VNAME RBRACKET
##
## Ends in an error in state: 101.
##
## separated_nonempty_list(CONJ,literals) -> NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
##
## The known suffix of the stack is as follows:
## NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
## In state 27, spurious reduction of production separated_nonempty_list(COMMA,term) -> term
## In state 31, spurious reduction of production loption(separated_nonempty_list(COMMA,term)) -> separated_nonempty_list(COMMA,term)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME CONJ NOT CNAME VNAME
##
## Ends in an error in state: 99.
##
## separated_nonempty_list(CONJ,literals) -> NOT CNAME . [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> NOT CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> NOT CNAME . CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> NOT CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
##
## The known suffix of the stack is as follows:
## NOT CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME CONJ NOT VNAME
##
## Ends in an error in state: 98.
##
## separated_nonempty_list(CONJ,literals) -> NOT . CNAME [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> NOT . CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> NOT . CNAME CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> NOT . CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
##
## The known suffix of the stack is as follows:
## NOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME CONJ VNAME
##
## Ends in an error in state: 119.
##
## separated_nonempty_list(CONJ,literals) -> CNAME CONJ . separated_nonempty_list(CONJ,literals) [ IMPLIES ]
##
## The known suffix of the stack is as follows:
## CNAME CONJ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME DISJ VNAME
##
## Ends in an error in state: 82.
##
## separated_nonempty_list(DISJ,literals) -> CNAME DISJ . separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## CNAME DISJ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LBRACKET CNAME RPAREN
##
## Ends in an error in state: 195.
##
## separated_nonempty_list(COMMA,tuple) -> term . [ RBRACKET ]
## separated_nonempty_list(COMMA,tuple) -> term . COMMA separated_nonempty_list(COMMA,tuple) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## term
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 25, spurious reduction of production term -> CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LBRACKET RBRACKET VNAME
##
## Ends in an error in state: 218.
##
## decl -> CNAME LBRACKET loption(separated_nonempty_list(COMMA,tuple)) RBRACKET . DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## CNAME LBRACKET loption(separated_nonempty_list(COMMA,tuple)) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LBRACKET RPAREN
##
## Ends in an error in state: 216.
##
## decl -> CNAME LBRACKET . loption(separated_nonempty_list(COMMA,tuple)) RBRACKET DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## CNAME LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LBRACKET VNAME COMMA RPAREN
##
## Ends in an error in state: 196.
##
## separated_nonempty_list(COMMA,tuple) -> term COMMA . separated_nonempty_list(COMMA,tuple) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## term COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LBRACKET VNAME RANGE RPAREN
##
## Ends in an error in state: 199.
##
## separated_nonempty_list(COMMA,tuple) -> expr RANGE . expr [ RBRACKET ]
## separated_nonempty_list(COMMA,tuple) -> expr RANGE . expr COMMA separated_nonempty_list(COMMA,tuple) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## expr RANGE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LBRACKET VNAME RANGE VNAME COMMA RPAREN
##
## Ends in an error in state: 201.
##
## separated_nonempty_list(COMMA,tuple) -> expr RANGE expr COMMA . separated_nonempty_list(COMMA,tuple) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## expr RANGE expr COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LBRACKET VNAME RANGE VNAME VNAME
##
## Ends in an error in state: 200.
##
## expr -> expr . DIV expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV COMMA ]
## expr -> expr . LOG expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV COMMA ]
## expr -> expr . MOD expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV COMMA ]
## expr -> expr . MULT expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV COMMA ]
## expr -> expr . POW expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV COMMA ]
## expr -> expr . PLUS expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV COMMA ]
## expr -> expr . MINUS expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV COMMA ]
## separated_nonempty_list(COMMA,tuple) -> expr RANGE expr . [ RBRACKET ]
## separated_nonempty_list(COMMA,tuple) -> expr RANGE expr . COMMA separated_nonempty_list(COMMA,tuple) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## expr RANGE expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LBRACKET VNAME VNAME
##
## Ends in an error in state: 198.
##
## expr -> expr . DIV expr [ RBRACKET RANGE POW PLUS MULT MOD MINUS LOG DIV COMMA ]
## expr -> expr . LOG expr [ RBRACKET RANGE POW PLUS MULT MOD MINUS LOG DIV COMMA ]
## expr -> expr . MOD expr [ RBRACKET RANGE POW PLUS MULT MOD MINUS LOG DIV COMMA ]
## expr -> expr . MULT expr [ RBRACKET RANGE POW PLUS MULT MOD MINUS LOG DIV COMMA ]
## expr -> expr . POW expr [ RBRACKET RANGE POW PLUS MULT MOD MINUS LOG DIV COMMA ]
## expr -> expr . PLUS expr [ RBRACKET RANGE POW PLUS MULT MOD MINUS LOG DIV COMMA ]
## expr -> expr . MINUS expr [ RBRACKET RANGE POW PLUS MULT MOD MINUS LOG DIV COMMA ]
## separated_nonempty_list(COMMA,tuple) -> expr . RANGE expr [ RBRACKET ]
## separated_nonempty_list(COMMA,tuple) -> expr . RANGE expr COMMA separated_nonempty_list(COMMA,tuple) [ RBRACKET ]
## term -> expr . [ RBRACKET COMMA ]
##
## The known suffix of the stack is as follows:
## expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LPAREN CNAME VNAME
##
## Ends in an error in state: 25.
##
## term -> CNAME . [ RPAREN RBRACKET DEFINE COMMA COLON ]
## term -> CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ RPAREN RBRACKET DEFINE COMMA COLON ]
##
## The known suffix of the stack is as follows:
## CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LPAREN RBRACKET
##
## Ends in an error in state: 191.
##
## separated_nonempty_list(CONJ,literals) -> CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(DISJ,literals) -> CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LPAREN RPAREN CONJ VNAME
##
## Ends in an error in state: 117.
##
## separated_nonempty_list(CONJ,literals) -> CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ . separated_nonempty_list(CONJ,literals) [ IMPLIES ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LPAREN RPAREN DISJ VNAME
##
## Ends in an error in state: 80.
##
## separated_nonempty_list(DISJ,literals) -> CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ . separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LPAREN RPAREN VNAME
##
## Ends in an error in state: 193.
##
## separated_nonempty_list(CONJ,literals) -> CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(DISJ,literals) -> CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . [ DOT ]
## separated_nonempty_list(DISJ,literals) -> CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LPAREN VNAME COMMA RPAREN
##
## Ends in an error in state: 28.
##
## separated_nonempty_list(COMMA,term) -> term COMMA . separated_nonempty_list(COMMA,term) [ RPAREN RBRACKET ]
##
## The known suffix of the stack is as follows:
## term COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LPAREN VNAME NEQ
##
## Ends in an error in state: 27.
##
## separated_nonempty_list(COMMA,term) -> term . [ RPAREN RBRACKET ]
## separated_nonempty_list(COMMA,term) -> term . COMMA separated_nonempty_list(COMMA,term) [ RPAREN RBRACKET ]
##
## The known suffix of the stack is as follows:
## term
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LPAREN VNAME RBRACKET
##
## Ends in an error in state: 192.
##
## separated_nonempty_list(CONJ,literals) -> CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(DISJ,literals) -> CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN loption(separated_nonempty_list(COMMA,term))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
## In state 27, spurious reduction of production separated_nonempty_list(COMMA,term) -> term
## In state 31, spurious reduction of production loption(separated_nonempty_list(COMMA,term)) -> separated_nonempty_list(COMMA,term)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME VNAME
##
## Ends in an error in state: 215.
##
## decl -> CNAME . LBRACKET loption(separated_nonempty_list(COMMA,tuple)) RBRACKET DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## separated_nonempty_list(CONJ,literals) -> CNAME . [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> CNAME . CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(DISJ,literals) -> CNAME . [ DOT ]
## separated_nonempty_list(DISJ,literals) -> CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> CNAME . DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
## separated_nonempty_list(DISJ,literals) -> CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: COLON RPAREN
##
## Ends in an error in state: 178.
##
## separated_nonempty_list(CONJ,literals) -> COLON . separated_nonempty_list(COMMA,ground_literal) COLON CNAME [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON . separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON . separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON . separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON . separated_nonempty_list(COMMA,ground_literal) COLON CNAME CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON . separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON . separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON . separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(DISJ,literals) -> COLON . separated_nonempty_list(COMMA,ground_literal) COLON CNAME [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON . separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON . separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON . separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON . separated_nonempty_list(COMMA,ground_literal) COLON CNAME DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON . separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON . separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON . separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: COLON VNAME NEQ VNAME COLON CNAME CONJ VNAME
##
## Ends in an error in state: 130.
##
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME CONJ . separated_nonempty_list(CONJ,literals) [ IMPLIES ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME CONJ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: COLON VNAME NEQ VNAME COLON CNAME DISJ VNAME
##
## Ends in an error in state: 93.
##
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME DISJ . separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME DISJ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: COLON VNAME NEQ VNAME COLON CNAME LPAREN RBRACKET
##
## Ends in an error in state: 187.
##
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: COLON VNAME NEQ VNAME COLON CNAME LPAREN RPAREN CONJ VNAME
##
## Ends in an error in state: 128.
##
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ . separated_nonempty_list(CONJ,literals) [ IMPLIES ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: COLON VNAME NEQ VNAME COLON CNAME LPAREN RPAREN DISJ VNAME
##
## Ends in an error in state: 91.
##
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ . separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: COLON VNAME NEQ VNAME COLON CNAME LPAREN RPAREN VNAME
##
## Ends in an error in state: 189.
##
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: COLON VNAME NEQ VNAME COLON CNAME LPAREN VNAME RBRACKET
##
## Ends in an error in state: 188.
##
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
## In state 27, spurious reduction of production separated_nonempty_list(COMMA,term) -> term
## In state 31, spurious reduction of production loption(separated_nonempty_list(COMMA,term)) -> separated_nonempty_list(COMMA,term)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: COLON VNAME NEQ VNAME COLON CNAME VNAME
##
## Ends in an error in state: 186.
##
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME . [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME . CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME . [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME . DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: COLON VNAME NEQ VNAME COLON NOT CNAME CONJ VNAME
##
## Ends in an error in state: 122.
##
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME CONJ . separated_nonempty_list(CONJ,literals) [ IMPLIES ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME CONJ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: COLON VNAME NEQ VNAME COLON NOT CNAME DISJ VNAME
##
## Ends in an error in state: 85.
##
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME DISJ . separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME DISJ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: COLON VNAME NEQ VNAME COLON NOT CNAME LPAREN RBRACKET
##
## Ends in an error in state: 183.
##
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: COLON VNAME NEQ VNAME COLON NOT CNAME LPAREN RPAREN CONJ VNAME
##
## Ends in an error in state: 112.
##
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ . separated_nonempty_list(CONJ,literals) [ IMPLIES ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: COLON VNAME NEQ VNAME COLON NOT CNAME LPAREN RPAREN DISJ VNAME
##
## Ends in an error in state: 75.
##
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ . separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: COLON VNAME NEQ VNAME COLON NOT CNAME LPAREN RPAREN VNAME
##
## Ends in an error in state: 185.
##
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: COLON VNAME NEQ VNAME COLON NOT CNAME LPAREN VNAME RBRACKET
##
## Ends in an error in state: 184.
##
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
## In state 27, spurious reduction of production separated_nonempty_list(COMMA,term) -> term
## In state 31, spurious reduction of production loption(separated_nonempty_list(COMMA,term)) -> separated_nonempty_list(COMMA,term)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: COLON VNAME NEQ VNAME COLON NOT CNAME VNAME
##
## Ends in an error in state: 182.
##
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME . [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME . CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME . [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME . DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: COLON VNAME NEQ VNAME COLON NOT VNAME
##
## Ends in an error in state: 181.
##
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT . CNAME [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT . CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT . CNAME CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT . CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT . CNAME [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT . CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT . CNAME DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT . CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: COLON VNAME NEQ VNAME COLON VNAME
##
## Ends in an error in state: 180.
##
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON . CNAME [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON . CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON . NOT CNAME [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON . NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON . CNAME CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON . CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON . NOT CNAME CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON . NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON . CNAME [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON . CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON . NOT CNAME [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON . NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON . CNAME DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON . CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON . NOT CNAME DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON . NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: COLON VNAME NEQ VNAME DEFINE
##
## Ends in an error in state: 179.
##
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) . COLON CNAME [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) . COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) . COLON NOT CNAME [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) . COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) . COLON CNAME CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) . COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) . COLON NOT CNAME CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) . COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) . COLON CNAME [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) . COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) . COLON NOT CNAME [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) . COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) . COLON CNAME DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) . COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) . COLON NOT CNAME DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) . COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
## In state 63, spurious reduction of production separated_nonempty_list(COMMA,ground_literal) -> term coperator term
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE CNAME LBRACKET RBRACKET COMMA RPAREN
##
## Ends in an error in state: 54.
##
## separated_nonempty_list(COMMA,ground_literal) -> CNAME LBRACKET loption(separated_nonempty_list(COMMA,term)) RBRACKET COMMA . separated_nonempty_list(COMMA,ground_literal) [ DEFINE COLON ]
##
## The known suffix of the stack is as follows:
## CNAME LBRACKET loption(separated_nonempty_list(COMMA,term)) RBRACKET COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE CNAME LBRACKET RBRACKET VNAME
##
## Ends in an error in state: 53.
##
## separated_nonempty_list(COMMA,ground_literal) -> CNAME LBRACKET loption(separated_nonempty_list(COMMA,term)) RBRACKET . [ DEFINE COLON ]
## separated_nonempty_list(COMMA,ground_literal) -> CNAME LBRACKET loption(separated_nonempty_list(COMMA,term)) RBRACKET . COMMA separated_nonempty_list(COMMA,ground_literal) [ DEFINE COLON ]
##
## The known suffix of the stack is as follows:
## CNAME LBRACKET loption(separated_nonempty_list(COMMA,term)) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE CNAME LBRACKET RPAREN
##
## Ends in an error in state: 51.
##
## separated_nonempty_list(COMMA,ground_literal) -> CNAME LBRACKET . loption(separated_nonempty_list(COMMA,term)) RBRACKET [ DEFINE COLON ]
## separated_nonempty_list(COMMA,ground_literal) -> CNAME LBRACKET . loption(separated_nonempty_list(COMMA,term)) RBRACKET COMMA separated_nonempty_list(COMMA,ground_literal) [ DEFINE COLON ]
##
## The known suffix of the stack is as follows:
## CNAME LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE CNAME LBRACKET VNAME RPAREN
##
## Ends in an error in state: 52.
##
## separated_nonempty_list(COMMA,ground_literal) -> CNAME LBRACKET loption(separated_nonempty_list(COMMA,term)) . RBRACKET [ DEFINE COLON ]
## separated_nonempty_list(COMMA,ground_literal) -> CNAME LBRACKET loption(separated_nonempty_list(COMMA,term)) . RBRACKET COMMA separated_nonempty_list(COMMA,ground_literal) [ DEFINE COLON ]
##
## The known suffix of the stack is as follows:
## CNAME LBRACKET loption(separated_nonempty_list(COMMA,term))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
## In state 27, spurious reduction of production separated_nonempty_list(COMMA,term) -> term
## In state 31, spurious reduction of production loption(separated_nonempty_list(COMMA,term)) -> separated_nonempty_list(COMMA,term)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE CNAME LPAREN RBRACKET
##
## Ends in an error in state: 26.
##
## term -> CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN [ RPAREN RBRACKET NEQ LT LEQ GT GEQ EQ DEFINE COMMA COLON ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE CNAME LPAREN VNAME RBRACKET
##
## Ends in an error in state: 32.
##
## term -> CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN [ RPAREN RBRACKET NEQ LT LEQ GT GEQ EQ DEFINE COMMA COLON ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN loption(separated_nonempty_list(COMMA,term))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
## In state 27, spurious reduction of production separated_nonempty_list(COMMA,term) -> term
## In state 31, spurious reduction of production loption(separated_nonempty_list(COMMA,term)) -> separated_nonempty_list(COMMA,term)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE CNAME VNAME
##
## Ends in an error in state: 50.
##
## separated_nonempty_list(COMMA,ground_literal) -> CNAME . LBRACKET loption(separated_nonempty_list(COMMA,term)) RBRACKET [ DEFINE COLON ]
## separated_nonempty_list(COMMA,ground_literal) -> CNAME . LBRACKET loption(separated_nonempty_list(COMMA,term)) RBRACKET COMMA separated_nonempty_list(COMMA,ground_literal) [ DEFINE COLON ]
## term -> CNAME . [ NEQ LT LEQ GT GEQ EQ ]
## term -> CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ NEQ LT LEQ GT GEQ EQ ]
##
## The known suffix of the stack is as follows:
## CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE DEFINE CNAME LBRACKET RBRACKET VNAME
##
## Ends in an error in state: 205.
##
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE CNAME LBRACKET loption(separated_nonempty_list(COMMA,tuple)) RBRACKET . DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE CNAME LBRACKET loption(separated_nonempty_list(COMMA,tuple)) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE DEFINE CNAME LBRACKET RPAREN
##
## Ends in an error in state: 194.
##
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE CNAME LBRACKET . loption(separated_nonempty_list(COMMA,tuple)) RBRACKET DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE CNAME LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE DEFINE CNAME VNAME
##
## Ends in an error in state: 190.
##
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE CNAME . LBRACKET loption(separated_nonempty_list(COMMA,tuple)) RBRACKET DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## separated_nonempty_list(CONJ,literals) -> CNAME . [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> CNAME . CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(DISJ,literals) -> CNAME . [ DOT ]
## separated_nonempty_list(DISJ,literals) -> CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> CNAME . DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
## separated_nonempty_list(DISJ,literals) -> CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE DEFINE EXISTS LBRACKET RPAREN
##
## Ends in an error in state: 169.
##
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE EXISTS LBRACKET . expr RBRACKET CNAME DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE EXISTS LBRACKET . expr RBRACKET CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE EXISTS LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE DEFINE EXISTS LBRACKET VNAME RBRACKET CNAME LPAREN RBRACKET
##
## Ends in an error in state: 173.
##
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE EXISTS LBRACKET expr RBRACKET CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE EXISTS LBRACKET expr RBRACKET CNAME LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE DEFINE EXISTS LBRACKET VNAME RBRACKET CNAME LPAREN RPAREN VNAME
##
## Ends in an error in state: 175.
##
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE EXISTS LBRACKET expr RBRACKET CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE EXISTS LBRACKET expr RBRACKET CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE DEFINE EXISTS LBRACKET VNAME RBRACKET CNAME LPAREN VNAME RBRACKET
##
## Ends in an error in state: 174.
##
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE EXISTS LBRACKET expr RBRACKET CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE EXISTS LBRACKET expr RBRACKET CNAME LPAREN loption(separated_nonempty_list(COMMA,term))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
## In state 27, spurious reduction of production separated_nonempty_list(COMMA,term) -> term
## In state 31, spurious reduction of production loption(separated_nonempty_list(COMMA,term)) -> separated_nonempty_list(COMMA,term)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE DEFINE EXISTS LBRACKET VNAME RBRACKET CNAME VNAME
##
## Ends in an error in state: 172.
##
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE EXISTS LBRACKET expr RBRACKET CNAME . DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE EXISTS LBRACKET expr RBRACKET CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE EXISTS LBRACKET expr RBRACKET CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE DEFINE EXISTS LBRACKET VNAME RBRACKET VNAME
##
## Ends in an error in state: 171.
##
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE EXISTS LBRACKET expr RBRACKET . CNAME DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE EXISTS LBRACKET expr RBRACKET . CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE EXISTS LBRACKET expr RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE DEFINE EXISTS LBRACKET VNAME VNAME
##
## Ends in an error in state: 170.
##
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE EXISTS LBRACKET expr . RBRACKET CNAME DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE EXISTS LBRACKET expr . RBRACKET CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## expr -> expr . DIV expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . LOG expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . MOD expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . MULT expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . POW expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . PLUS expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . MINUS expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
##
## The known suffix of the stack is as follows:
## DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE EXISTS LBRACKET expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE DEFINE EXISTS VNAME
##
## Ends in an error in state: 168.
##
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE EXISTS . LBRACKET expr RBRACKET CNAME DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE EXISTS . LBRACKET expr RBRACKET CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE EXISTS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE DEFINE FORALL LBRACKET RPAREN
##
## Ends in an error in state: 159.
##
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE FORALL LBRACKET . expr RBRACKET CNAME DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE FORALL LBRACKET . expr RBRACKET CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE FORALL LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE DEFINE FORALL LBRACKET VNAME RBRACKET CNAME LPAREN RBRACKET
##
## Ends in an error in state: 163.
##
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE FORALL LBRACKET expr RBRACKET CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE FORALL LBRACKET expr RBRACKET CNAME LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE DEFINE FORALL LBRACKET VNAME RBRACKET CNAME LPAREN RPAREN VNAME
##
## Ends in an error in state: 165.
##
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE FORALL LBRACKET expr RBRACKET CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE FORALL LBRACKET expr RBRACKET CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE DEFINE FORALL LBRACKET VNAME RBRACKET CNAME LPAREN VNAME RBRACKET
##
## Ends in an error in state: 164.
##
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE FORALL LBRACKET expr RBRACKET CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE FORALL LBRACKET expr RBRACKET CNAME LPAREN loption(separated_nonempty_list(COMMA,term))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
## In state 27, spurious reduction of production separated_nonempty_list(COMMA,term) -> term
## In state 31, spurious reduction of production loption(separated_nonempty_list(COMMA,term)) -> separated_nonempty_list(COMMA,term)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE DEFINE FORALL LBRACKET VNAME RBRACKET CNAME VNAME
##
## Ends in an error in state: 162.
##
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE FORALL LBRACKET expr RBRACKET CNAME . DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE FORALL LBRACKET expr RBRACKET CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE FORALL LBRACKET expr RBRACKET CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE DEFINE FORALL LBRACKET VNAME RBRACKET VNAME
##
## Ends in an error in state: 161.
##
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE FORALL LBRACKET expr RBRACKET . CNAME DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE FORALL LBRACKET expr RBRACKET . CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE FORALL LBRACKET expr RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE DEFINE FORALL LBRACKET VNAME VNAME
##
## Ends in an error in state: 160.
##
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE FORALL LBRACKET expr . RBRACKET CNAME DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE FORALL LBRACKET expr . RBRACKET CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## expr -> expr . DIV expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . LOG expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . MOD expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . MULT expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . POW expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . PLUS expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . MINUS expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
##
## The known suffix of the stack is as follows:
## DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE FORALL LBRACKET expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE DEFINE FORALL VNAME
##
## Ends in an error in state: 158.
##
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE FORALL . LBRACKET expr RBRACKET CNAME DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE FORALL . LBRACKET expr RBRACKET CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE FORALL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE DEFINE IMPLIES VNAME
##
## Ends in an error in state: 212.
##
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE loption(separated_nonempty_list(CONJ,literals)) IMPLIES . loption(separated_nonempty_list(DISJ,literals)) DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE loption(separated_nonempty_list(CONJ,literals)) IMPLIES
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE DEFINE VNAME
##
## Ends in an error in state: 157.
##
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE . CNAME LBRACKET loption(separated_nonempty_list(COMMA,tuple)) RBRACKET DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE . EXISTS LBRACKET expr RBRACKET CNAME DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE . EXISTS LBRACKET expr RBRACKET CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE . FORALL LBRACKET expr RBRACKET CNAME DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE . FORALL LBRACKET expr RBRACKET CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE . loption(separated_nonempty_list(CONJ,literals)) IMPLIES loption(separated_nonempty_list(DISJ,literals)) DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE . loption(separated_nonempty_list(DISJ,literals)) DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE LPAREN RPAREN
##
## Ends in an error in state: 6.
##
## expr -> LPAREN . expr RPAREN [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE LPAREN VNAME VNAME
##
## Ends in an error in state: 8.
##
## expr -> expr . DIV expr [ RPAREN POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . LOG expr [ RPAREN POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . MOD expr [ RPAREN POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . MULT expr [ RPAREN POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . POW expr [ RPAREN POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . PLUS expr [ RPAREN POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . MINUS expr [ RPAREN POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> LPAREN expr . RPAREN [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LPAREN expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE MINUS RPAREN
##
## Ends in an error in state: 5.
##
## expr -> MINUS . expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
##
## The known suffix of the stack is as follows:
## MINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE MINUS VNAME VNAME
##
## Ends in an error in state: 24.
##
## expr -> expr . DIV expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . LOG expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . MOD expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . MULT expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . POW expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . PLUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . MINUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> MINUS expr . [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
##
## The known suffix of the stack is as follows:
## MINUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE NOT CNAME LBRACKET RBRACKET COMMA RPAREN
##
## Ends in an error in state: 49.
##
## separated_nonempty_list(COMMA,ground_literal) -> NOT CNAME LBRACKET loption(separated_nonempty_list(COMMA,term)) RBRACKET COMMA . separated_nonempty_list(COMMA,ground_literal) [ DEFINE COLON ]
##
## The known suffix of the stack is as follows:
## NOT CNAME LBRACKET loption(separated_nonempty_list(COMMA,term)) RBRACKET COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE NOT CNAME LBRACKET RBRACKET VNAME
##
## Ends in an error in state: 48.
##
## separated_nonempty_list(COMMA,ground_literal) -> NOT CNAME LBRACKET loption(separated_nonempty_list(COMMA,term)) RBRACKET . [ DEFINE COLON ]
## separated_nonempty_list(COMMA,ground_literal) -> NOT CNAME LBRACKET loption(separated_nonempty_list(COMMA,term)) RBRACKET . COMMA separated_nonempty_list(COMMA,ground_literal) [ DEFINE COLON ]
##
## The known suffix of the stack is as follows:
## NOT CNAME LBRACKET loption(separated_nonempty_list(COMMA,term)) RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE NOT CNAME LBRACKET RPAREN
##
## Ends in an error in state: 46.
##
## separated_nonempty_list(COMMA,ground_literal) -> NOT CNAME LBRACKET . loption(separated_nonempty_list(COMMA,term)) RBRACKET [ DEFINE COLON ]
## separated_nonempty_list(COMMA,ground_literal) -> NOT CNAME LBRACKET . loption(separated_nonempty_list(COMMA,term)) RBRACKET COMMA separated_nonempty_list(COMMA,ground_literal) [ DEFINE COLON ]
##
## The known suffix of the stack is as follows:
## NOT CNAME LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE NOT CNAME LBRACKET VNAME RPAREN
##
## Ends in an error in state: 47.
##
## separated_nonempty_list(COMMA,ground_literal) -> NOT CNAME LBRACKET loption(separated_nonempty_list(COMMA,term)) . RBRACKET [ DEFINE COLON ]
## separated_nonempty_list(COMMA,ground_literal) -> NOT CNAME LBRACKET loption(separated_nonempty_list(COMMA,term)) . RBRACKET COMMA separated_nonempty_list(COMMA,ground_literal) [ DEFINE COLON ]
##
## The known suffix of the stack is as follows:
## NOT CNAME LBRACKET loption(separated_nonempty_list(COMMA,term))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
## In state 27, spurious reduction of production separated_nonempty_list(COMMA,term) -> term
## In state 31, spurious reduction of production loption(separated_nonempty_list(COMMA,term)) -> separated_nonempty_list(COMMA,term)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE NOT CNAME VNAME
##
## Ends in an error in state: 45.
##
## separated_nonempty_list(COMMA,ground_literal) -> NOT CNAME . LBRACKET loption(separated_nonempty_list(COMMA,term)) RBRACKET [ DEFINE COLON ]
## separated_nonempty_list(COMMA,ground_literal) -> NOT CNAME . LBRACKET loption(separated_nonempty_list(COMMA,term)) RBRACKET COMMA separated_nonempty_list(COMMA,ground_literal) [ DEFINE COLON ]
##
## The known suffix of the stack is as follows:
## NOT CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE NOT VNAME
##
## Ends in an error in state: 44.
##
## separated_nonempty_list(COMMA,ground_literal) -> NOT . CNAME LBRACKET loption(separated_nonempty_list(COMMA,term)) RBRACKET [ DEFINE COLON ]
## separated_nonempty_list(COMMA,ground_literal) -> NOT . CNAME LBRACKET loption(separated_nonempty_list(COMMA,term)) RBRACKET COMMA separated_nonempty_list(COMMA,ground_literal) [ DEFINE COLON ]
##
## The known suffix of the stack is as follows:
## NOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE RPAREN
##
## Ends in an error in state: 154.
##
## decl -> DEFINE . loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE CNAME LBRACKET loption(separated_nonempty_list(COMMA,tuple)) RBRACKET DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> DEFINE . loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE EXISTS LBRACKET expr RBRACKET CNAME DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> DEFINE . loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE EXISTS LBRACKET expr RBRACKET CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> DEFINE . loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE FORALL LBRACKET expr RBRACKET CNAME DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> DEFINE . loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE FORALL LBRACKET expr RBRACKET CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> DEFINE . loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE loption(separated_nonempty_list(CONJ,literals)) IMPLIES loption(separated_nonempty_list(DISJ,literals)) DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> DEFINE . loption(separated_nonempty_list(COMMA,ground_literal)) DEFINE loption(separated_nonempty_list(DISJ,literals)) DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## DEFINE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE VNAME DIV RPAREN
##
## Ends in an error in state: 18.
##
## expr -> expr DIV . expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr DIV
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE VNAME DIV VNAME VNAME
##
## Ends in an error in state: 19.
##
## expr -> expr . DIV expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr DIV expr . [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . LOG expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . MOD expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . MULT expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . POW expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . PLUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . MINUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr DIV expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE VNAME LOG RPAREN
##
## Ends in an error in state: 12.
##
## expr -> expr LOG . expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr LOG
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE VNAME LOG VNAME VNAME
##
## Ends in an error in state: 13.
##
## expr -> expr . DIV expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . LOG expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr LOG expr . [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . MOD expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . MULT expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . POW expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . PLUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . MINUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr LOG expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE VNAME MINUS RPAREN
##
## Ends in an error in state: 22.
##
## expr -> expr MINUS . expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr MINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE VNAME MINUS VNAME VNAME
##
## Ends in an error in state: 23.
##
## expr -> expr . DIV expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . LOG expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . MOD expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . MULT expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . POW expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . PLUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . MINUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr MINUS expr . [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr MINUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE VNAME MOD RPAREN
##
## Ends in an error in state: 20.
##
## expr -> expr MOD . expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr MOD
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE VNAME MOD VNAME VNAME
##
## Ends in an error in state: 21.
##
## expr -> expr . DIV expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . LOG expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . MOD expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr MOD expr . [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . MULT expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . POW expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . PLUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . MINUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr MOD expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE VNAME MULT RPAREN
##
## Ends in an error in state: 16.
##
## expr -> expr MULT . expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr MULT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE VNAME MULT VNAME VNAME
##
## Ends in an error in state: 17.
##
## expr -> expr . DIV expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . LOG expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . MOD expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . MULT expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr MULT expr . [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . POW expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . PLUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . MINUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr MULT expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE VNAME NEQ RPAREN
##
## Ends in an error in state: 62.
##
## separated_nonempty_list(COMMA,ground_literal) -> term coperator . term [ DEFINE COLON ]
## separated_nonempty_list(COMMA,ground_literal) -> term coperator . term COMMA separated_nonempty_list(COMMA,ground_literal) [ DEFINE COLON ]
##
## The known suffix of the stack is as follows:
## term coperator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE VNAME NEQ VNAME COLON
##
## Ends in an error in state: 156.
##
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) . DEFINE CNAME LBRACKET loption(separated_nonempty_list(COMMA,tuple)) RBRACKET DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) . DEFINE EXISTS LBRACKET expr RBRACKET CNAME DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) . DEFINE EXISTS LBRACKET expr RBRACKET CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) . DEFINE FORALL LBRACKET expr RBRACKET CNAME DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) . DEFINE FORALL LBRACKET expr RBRACKET CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) . DEFINE loption(separated_nonempty_list(CONJ,literals)) IMPLIES loption(separated_nonempty_list(DISJ,literals)) DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> DEFINE loption(separated_nonempty_list(COMMA,ground_literal)) . DEFINE loption(separated_nonempty_list(DISJ,literals)) DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## DEFINE loption(separated_nonempty_list(COMMA,ground_literal))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
## In state 63, spurious reduction of production separated_nonempty_list(COMMA,ground_literal) -> term coperator term
## In state 155, spurious reduction of production loption(separated_nonempty_list(COMMA,ground_literal)) -> separated_nonempty_list(COMMA,ground_literal)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE VNAME NEQ VNAME COMMA RPAREN
##
## Ends in an error in state: 64.
##
## separated_nonempty_list(COMMA,ground_literal) -> term coperator term COMMA . separated_nonempty_list(COMMA,ground_literal) [ DEFINE COLON ]
##
## The known suffix of the stack is as follows:
## term coperator term COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE VNAME NEQ VNAME RPAREN
##
## Ends in an error in state: 63.
##
## separated_nonempty_list(COMMA,ground_literal) -> term coperator term . [ DEFINE COLON ]
## separated_nonempty_list(COMMA,ground_literal) -> term coperator term . COMMA separated_nonempty_list(COMMA,ground_literal) [ DEFINE COLON ]
##
## The known suffix of the stack is as follows:
## term coperator term
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE VNAME PLUS RPAREN
##
## Ends in an error in state: 14.
##
## expr -> expr PLUS . expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr PLUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE VNAME PLUS VNAME VNAME
##
## Ends in an error in state: 15.
##
## expr -> expr . DIV expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . LOG expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . MOD expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . MULT expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . POW expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . PLUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr PLUS expr . [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . MINUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr PLUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE VNAME POW RPAREN
##
## Ends in an error in state: 10.
##
## expr -> expr POW . expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr POW
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE VNAME POW VNAME VNAME
##
## Ends in an error in state: 11.
##
## expr -> expr . DIV expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . LOG expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . MOD expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . MULT expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . POW expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr POW expr . [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . PLUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . MINUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr POW expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE VNAME RPAREN
##
## Ends in an error in state: 55.
##
## separated_nonempty_list(COMMA,ground_literal) -> term . coperator term [ DEFINE COLON ]
## separated_nonempty_list(COMMA,ground_literal) -> term . coperator term COMMA separated_nonempty_list(COMMA,ground_literal) [ DEFINE COLON ]
##
## The known suffix of the stack is as follows:
## term
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DEFINE VNAME VNAME
##
## Ends in an error in state: 30.
##
## expr -> expr . DIV expr [ RPAREN RBRACKET POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . LOG expr [ RPAREN RBRACKET POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . MOD expr [ RPAREN RBRACKET POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . MULT expr [ RPAREN RBRACKET POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . POW expr [ RPAREN RBRACKET POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . PLUS expr [ RPAREN RBRACKET POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## expr -> expr . MINUS expr [ RPAREN RBRACKET POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DEFINE COMMA COLON ]
## term -> expr . [ RPAREN RBRACKET NEQ LT LEQ GT GEQ EQ DEFINE COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DOT VNAME
##
## Ends in an error in state: 229.
##
## list(decl) -> decl . list(decl) [ EOF ]
##
## The known suffix of the stack is as follows:
## decl
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: EXISTS LBRACKET RPAREN
##
## Ends in an error in state: 145.
##
## decl -> EXISTS LBRACKET . expr RBRACKET CNAME DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> EXISTS LBRACKET . expr RBRACKET CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## EXISTS LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: EXISTS LBRACKET VNAME RBRACKET CNAME LPAREN RBRACKET
##
## Ends in an error in state: 149.
##
## decl -> EXISTS LBRACKET expr RBRACKET CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## EXISTS LBRACKET expr RBRACKET CNAME LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: EXISTS LBRACKET VNAME RBRACKET CNAME LPAREN RPAREN VNAME
##
## Ends in an error in state: 151.
##
## decl -> EXISTS LBRACKET expr RBRACKET CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## EXISTS LBRACKET expr RBRACKET CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: EXISTS LBRACKET VNAME RBRACKET CNAME LPAREN VNAME RBRACKET
##
## Ends in an error in state: 150.
##
## decl -> EXISTS LBRACKET expr RBRACKET CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## EXISTS LBRACKET expr RBRACKET CNAME LPAREN loption(separated_nonempty_list(COMMA,term))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
## In state 27, spurious reduction of production separated_nonempty_list(COMMA,term) -> term
## In state 31, spurious reduction of production loption(separated_nonempty_list(COMMA,term)) -> separated_nonempty_list(COMMA,term)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: EXISTS LBRACKET VNAME RBRACKET CNAME VNAME
##
## Ends in an error in state: 148.
##
## decl -> EXISTS LBRACKET expr RBRACKET CNAME . DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> EXISTS LBRACKET expr RBRACKET CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## EXISTS LBRACKET expr RBRACKET CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: EXISTS LBRACKET VNAME RBRACKET VNAME
##
## Ends in an error in state: 147.
##
## decl -> EXISTS LBRACKET expr RBRACKET . CNAME DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> EXISTS LBRACKET expr RBRACKET . CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## EXISTS LBRACKET expr RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: EXISTS LBRACKET VNAME VNAME
##
## Ends in an error in state: 146.
##
## decl -> EXISTS LBRACKET expr . RBRACKET CNAME DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> EXISTS LBRACKET expr . RBRACKET CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## expr -> expr . DIV expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . LOG expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . MOD expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . MULT expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . POW expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . PLUS expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . MINUS expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
##
## The known suffix of the stack is as follows:
## EXISTS LBRACKET expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: EXISTS VNAME
##
## Ends in an error in state: 144.
##
## decl -> EXISTS . LBRACKET expr RBRACKET CNAME DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> EXISTS . LBRACKET expr RBRACKET CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## EXISTS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: FORALL LBRACKET RPAREN
##
## Ends in an error in state: 135.
##
## decl -> FORALL LBRACKET . expr RBRACKET CNAME DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> FORALL LBRACKET . expr RBRACKET CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## FORALL LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: FORALL LBRACKET VNAME RBRACKET CNAME LPAREN RBRACKET
##
## Ends in an error in state: 139.
##
## decl -> FORALL LBRACKET expr RBRACKET CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## FORALL LBRACKET expr RBRACKET CNAME LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: FORALL LBRACKET VNAME RBRACKET CNAME LPAREN RPAREN VNAME
##
## Ends in an error in state: 141.
##
## decl -> FORALL LBRACKET expr RBRACKET CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## FORALL LBRACKET expr RBRACKET CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: FORALL LBRACKET VNAME RBRACKET CNAME LPAREN VNAME RBRACKET
##
## Ends in an error in state: 140.
##
## decl -> FORALL LBRACKET expr RBRACKET CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## FORALL LBRACKET expr RBRACKET CNAME LPAREN loption(separated_nonempty_list(COMMA,term))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
## In state 27, spurious reduction of production separated_nonempty_list(COMMA,term) -> term
## In state 31, spurious reduction of production loption(separated_nonempty_list(COMMA,term)) -> separated_nonempty_list(COMMA,term)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: FORALL LBRACKET VNAME RBRACKET CNAME VNAME
##
## Ends in an error in state: 138.
##
## decl -> FORALL LBRACKET expr RBRACKET CNAME . DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> FORALL LBRACKET expr RBRACKET CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## FORALL LBRACKET expr RBRACKET CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: FORALL LBRACKET VNAME RBRACKET VNAME
##
## Ends in an error in state: 137.
##
## decl -> FORALL LBRACKET expr RBRACKET . CNAME DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> FORALL LBRACKET expr RBRACKET . CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## FORALL LBRACKET expr RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: FORALL LBRACKET VNAME VNAME
##
## Ends in an error in state: 136.
##
## decl -> FORALL LBRACKET expr . RBRACKET CNAME DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> FORALL LBRACKET expr . RBRACKET CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## expr -> expr . DIV expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . LOG expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . MOD expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . MULT expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . POW expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . PLUS expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . MINUS expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
##
## The known suffix of the stack is as follows:
## FORALL LBRACKET expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: FORALL VNAME
##
## Ends in an error in state: 134.
##
## decl -> FORALL . LBRACKET expr RBRACKET CNAME DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
## decl -> FORALL . LBRACKET expr RBRACKET CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## FORALL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIES CNAME LPAREN RBRACKET
##
## Ends in an error in state: 77.
##
## separated_nonempty_list(DISJ,literals) -> CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIES CNAME LPAREN RPAREN VNAME
##
## Ends in an error in state: 79.
##
## separated_nonempty_list(DISJ,literals) -> CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . [ DOT ]
## separated_nonempty_list(DISJ,literals) -> CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIES CNAME LPAREN VNAME RBRACKET
##
## Ends in an error in state: 78.
##
## separated_nonempty_list(DISJ,literals) -> CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN loption(separated_nonempty_list(COMMA,term))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
## In state 27, spurious reduction of production separated_nonempty_list(COMMA,term) -> term
## In state 31, spurious reduction of production loption(separated_nonempty_list(COMMA,term)) -> separated_nonempty_list(COMMA,term)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIES CNAME VNAME
##
## Ends in an error in state: 76.
##
## separated_nonempty_list(DISJ,literals) -> CNAME . [ DOT ]
## separated_nonempty_list(DISJ,literals) -> CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> CNAME . DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
## separated_nonempty_list(DISJ,literals) -> CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIES COLON RPAREN
##
## Ends in an error in state: 43.
##
## separated_nonempty_list(DISJ,literals) -> COLON . separated_nonempty_list(COMMA,ground_literal) COLON CNAME [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON . separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON . separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON . separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON . separated_nonempty_list(COMMA,ground_literal) COLON CNAME DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON . separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON . separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON . separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIES COLON VNAME EQ VNAME COLON CNAME LPAREN RBRACKET
##
## Ends in an error in state: 88.
##
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIES COLON VNAME EQ VNAME COLON CNAME LPAREN RPAREN VNAME
##
## Ends in an error in state: 90.
##
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIES COLON VNAME EQ VNAME COLON CNAME LPAREN VNAME RBRACKET
##
## Ends in an error in state: 89.
##
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
## In state 27, spurious reduction of production separated_nonempty_list(COMMA,term) -> term
## In state 31, spurious reduction of production loption(separated_nonempty_list(COMMA,term)) -> separated_nonempty_list(COMMA,term)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIES COLON VNAME EQ VNAME COLON CNAME VNAME
##
## Ends in an error in state: 87.
##
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME . [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME . DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIES COLON VNAME EQ VNAME COLON NOT CNAME LPAREN RBRACKET
##
## Ends in an error in state: 72.
##
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIES COLON VNAME EQ VNAME COLON NOT CNAME LPAREN RPAREN VNAME
##
## Ends in an error in state: 74.
##
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIES COLON VNAME EQ VNAME COLON NOT CNAME LPAREN VNAME RBRACKET
##
## Ends in an error in state: 73.
##
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
## In state 27, spurious reduction of production separated_nonempty_list(COMMA,term) -> term
## In state 31, spurious reduction of production loption(separated_nonempty_list(COMMA,term)) -> separated_nonempty_list(COMMA,term)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIES COLON VNAME EQ VNAME COLON NOT CNAME VNAME
##
## Ends in an error in state: 71.
##
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME . [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME . DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIES COLON VNAME EQ VNAME COLON NOT VNAME
##
## Ends in an error in state: 70.
##
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT . CNAME [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT . CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT . CNAME DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT . CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON NOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIES COLON VNAME EQ VNAME COLON VNAME
##
## Ends in an error in state: 69.
##
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON . CNAME [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON . CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON . NOT CNAME [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON . NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON . CNAME DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON . CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON . NOT CNAME DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) COLON . NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal) COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIES COLON VNAME EQ VNAME DEFINE
##
## Ends in an error in state: 68.
##
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) . COLON CNAME [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) . COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) . COLON NOT CNAME [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) . COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) . COLON CNAME DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) . COLON CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) . COLON NOT CNAME DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON separated_nonempty_list(COMMA,ground_literal) . COLON NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## COLON separated_nonempty_list(COMMA,ground_literal)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
## In state 63, spurious reduction of production separated_nonempty_list(COMMA,ground_literal) -> term coperator term
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIES NOT CNAME LPAREN RBRACKET
##
## Ends in an error in state: 39.
##
## separated_nonempty_list(DISJ,literals) -> NOT CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> NOT CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## NOT CNAME LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIES NOT CNAME LPAREN RPAREN VNAME
##
## Ends in an error in state: 41.
##
## separated_nonempty_list(DISJ,literals) -> NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . [ DOT ]
## separated_nonempty_list(DISJ,literals) -> NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIES NOT CNAME LPAREN VNAME RBRACKET
##
## Ends in an error in state: 40.
##
## separated_nonempty_list(DISJ,literals) -> NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
## In state 27, spurious reduction of production separated_nonempty_list(COMMA,term) -> term
## In state 31, spurious reduction of production loption(separated_nonempty_list(COMMA,term)) -> separated_nonempty_list(COMMA,term)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIES NOT CNAME VNAME
##
## Ends in an error in state: 38.
##
## separated_nonempty_list(DISJ,literals) -> NOT CNAME . [ DOT ]
## separated_nonempty_list(DISJ,literals) -> NOT CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> NOT CNAME . DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
## separated_nonempty_list(DISJ,literals) -> NOT CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## NOT CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIES NOT VNAME
##
## Ends in an error in state: 37.
##
## separated_nonempty_list(DISJ,literals) -> NOT . CNAME [ DOT ]
## separated_nonempty_list(DISJ,literals) -> NOT . CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> NOT . CNAME DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
## separated_nonempty_list(DISJ,literals) -> NOT . CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## NOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIES VNAME
##
## Ends in an error in state: 223.
##
## decl -> loption(separated_nonempty_list(CONJ,literals)) IMPLIES . loption(separated_nonempty_list(DISJ,literals)) DOT [ NOT IMPLIES FORALL EXISTS EOF DOT DEFINE COLON CNAME ]
##
## The known suffix of the stack is as follows:
## loption(separated_nonempty_list(CONJ,literals)) IMPLIES
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: NOT CNAME CONJ VNAME
##
## Ends in an error in state: 103.
##
## separated_nonempty_list(CONJ,literals) -> NOT CNAME CONJ . separated_nonempty_list(CONJ,literals) [ IMPLIES ]
##
## The known suffix of the stack is as follows:
## NOT CNAME CONJ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: NOT CNAME DISJ VNAME
##
## Ends in an error in state: 42.
##
## separated_nonempty_list(DISJ,literals) -> NOT CNAME DISJ . separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## NOT CNAME DISJ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: NOT CNAME LPAREN RBRACKET
##
## Ends in an error in state: 3.
##
## separated_nonempty_list(CONJ,literals) -> NOT CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> NOT CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(DISJ,literals) -> NOT CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> NOT CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## NOT CNAME LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: NOT CNAME LPAREN RPAREN CONJ VNAME
##
## Ends in an error in state: 97.
##
## separated_nonempty_list(CONJ,literals) -> NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ . separated_nonempty_list(CONJ,literals) [ IMPLIES ]
##
## The known suffix of the stack is as follows:
## NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: NOT CNAME LPAREN RPAREN DISJ VNAME
##
## Ends in an error in state: 36.
##
## separated_nonempty_list(DISJ,literals) -> NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ . separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: NOT CNAME LPAREN RPAREN VNAME
##
## Ends in an error in state: 35.
##
## separated_nonempty_list(CONJ,literals) -> NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(DISJ,literals) -> NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . [ DOT ]
## separated_nonempty_list(DISJ,literals) -> NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: NOT CNAME LPAREN VNAME RBRACKET
##
## Ends in an error in state: 34.
##
## separated_nonempty_list(CONJ,literals) -> NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(DISJ,literals) -> NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## NOT CNAME LPAREN loption(separated_nonempty_list(COMMA,term))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
## In state 27, spurious reduction of production separated_nonempty_list(COMMA,term) -> term
## In state 31, spurious reduction of production loption(separated_nonempty_list(COMMA,term)) -> separated_nonempty_list(COMMA,term)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: NOT CNAME VNAME
##
## Ends in an error in state: 2.
##
## separated_nonempty_list(CONJ,literals) -> NOT CNAME . [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> NOT CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> NOT CNAME . CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> NOT CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(DISJ,literals) -> NOT CNAME . [ DOT ]
## separated_nonempty_list(DISJ,literals) -> NOT CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> NOT CNAME . DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
## separated_nonempty_list(DISJ,literals) -> NOT CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## NOT CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: NOT VNAME
##
## Ends in an error in state: 1.
##
## separated_nonempty_list(CONJ,literals) -> NOT . CNAME [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> NOT . CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> NOT . CNAME CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> NOT . CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(DISJ,literals) -> NOT . CNAME [ DOT ]
## separated_nonempty_list(DISJ,literals) -> NOT . CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ DOT ]
## separated_nonempty_list(DISJ,literals) -> NOT . CNAME DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
## separated_nonempty_list(DISJ,literals) -> NOT . CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN DISJ separated_nonempty_list(DISJ,literals) [ DOT ]
##
## The known suffix of the stack is as follows:
## NOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME
##
## Ends in an error in state: 0.
##
## file' -> . file [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

