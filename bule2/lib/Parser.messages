file: CNAME CONJ CNAME DOT
##
## Ends in an error in state: 162.
##
## clause_part -> clause_body . IMPLIES clause_head [ DOT ]
##
## The known suffix of the stack is as follows:
## clause_body
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production atom -> CNAME
## In state 100, spurious reduction of production separated_nonempty_list(CONJ,literals) -> atom
## In state 102, spurious reduction of production separated_nonempty_list(CONJ,literals) -> atom CONJ separated_nonempty_list(CONJ,literals)
## In state 152, spurious reduction of production loption(separated_nonempty_list(CONJ,literals)) -> separated_nonempty_list(CONJ,literals)
## In state 156, spurious reduction of production clause_body -> loption(separated_nonempty_list(CONJ,literals))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME CONJ VNAME
##
## Ends in an error in state: 101.
##
## separated_nonempty_list(CONJ,literals) -> atom CONJ . separated_nonempty_list(CONJ,literals) [ IMPLIES DOT ]
##
## The known suffix of the stack is as follows:
## atom CONJ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME DISJ VNAME
##
## Ends in an error in state: 80.
##
## separated_nonempty_list(DISJ,literals) -> atom DISJ . separated_nonempty_list(DISJ,literals) [ IMPLIED DOT ]
##
## The known suffix of the stack is as follows:
## atom DISJ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LBRACKET CNAME RPAREN
##
## Ends in an error in state: 140.
##
## separated_nonempty_list(COMMA,tuple) -> term . [ RBRACKET ]
## separated_nonempty_list(COMMA,tuple) -> term . COMMA separated_nonempty_list(COMMA,tuple) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## term
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 25, spurious reduction of production term -> CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LBRACKET RPAREN
##
## Ends in an error in state: 139.
##
## pre_decl -> CNAME LBRACKET . loption(separated_nonempty_list(COMMA,tuple)) RBRACKET [ DOT ]
##
## The known suffix of the stack is as follows:
## CNAME LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LBRACKET VNAME COMMA RPAREN
##
## Ends in an error in state: 141.
##
## separated_nonempty_list(COMMA,tuple) -> term COMMA . separated_nonempty_list(COMMA,tuple) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## term COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LBRACKET VNAME RANGE RPAREN
##
## Ends in an error in state: 144.
##
## separated_nonempty_list(COMMA,tuple) -> expr RANGE . expr [ RBRACKET ]
## separated_nonempty_list(COMMA,tuple) -> expr RANGE . expr COMMA separated_nonempty_list(COMMA,tuple) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## expr RANGE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LBRACKET VNAME RANGE VNAME COMMA RPAREN
##
## Ends in an error in state: 146.
##
## separated_nonempty_list(COMMA,tuple) -> expr RANGE expr COMMA . separated_nonempty_list(COMMA,tuple) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## expr RANGE expr COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LBRACKET VNAME RANGE VNAME VNAME
##
## Ends in an error in state: 145.
##
## expr -> expr . DIV expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV COMMA ]
## expr -> expr . LOG expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV COMMA ]
## expr -> expr . MOD expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV COMMA ]
## expr -> expr . MULT expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV COMMA ]
## expr -> expr . POW expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV COMMA ]
## expr -> expr . PLUS expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV COMMA ]
## expr -> expr . MINUS expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV COMMA ]
## separated_nonempty_list(COMMA,tuple) -> expr RANGE expr . [ RBRACKET ]
## separated_nonempty_list(COMMA,tuple) -> expr RANGE expr . COMMA separated_nonempty_list(COMMA,tuple) [ RBRACKET ]
##
## The known suffix of the stack is as follows:
## expr RANGE expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LBRACKET VNAME VNAME
##
## Ends in an error in state: 143.
##
## expr -> expr . DIV expr [ RBRACKET RANGE POW PLUS MULT MOD MINUS LOG DIV COMMA ]
## expr -> expr . LOG expr [ RBRACKET RANGE POW PLUS MULT MOD MINUS LOG DIV COMMA ]
## expr -> expr . MOD expr [ RBRACKET RANGE POW PLUS MULT MOD MINUS LOG DIV COMMA ]
## expr -> expr . MULT expr [ RBRACKET RANGE POW PLUS MULT MOD MINUS LOG DIV COMMA ]
## expr -> expr . POW expr [ RBRACKET RANGE POW PLUS MULT MOD MINUS LOG DIV COMMA ]
## expr -> expr . PLUS expr [ RBRACKET RANGE POW PLUS MULT MOD MINUS LOG DIV COMMA ]
## expr -> expr . MINUS expr [ RBRACKET RANGE POW PLUS MULT MOD MINUS LOG DIV COMMA ]
## separated_nonempty_list(COMMA,tuple) -> expr . RANGE expr [ RBRACKET ]
## separated_nonempty_list(COMMA,tuple) -> expr . RANGE expr COMMA separated_nonempty_list(COMMA,tuple) [ RBRACKET ]
## term -> expr . [ RBRACKET COMMA ]
##
## The known suffix of the stack is as follows:
## expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LPAREN CNAME VNAME
##
## Ends in an error in state: 25.
##
## term -> CNAME . [ RPAREN RBRACKET LT LEQ GT GEQ DCOLON COMMA COLON ]
## term -> CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ RPAREN RBRACKET LT LEQ GT GEQ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LPAREN RBRACKET
##
## Ends in an error in state: 3.
##
## atom -> CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES IMPLIED DOT DISJ CONJ COMMA ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LPAREN RPAREN VNAME
##
## Ends in an error in state: 165.
##
## separated_nonempty_list(CONJ,literals) -> atom . [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> atom . CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(DISJ,literals) -> atom . [ IMPLIED DOT ]
## separated_nonempty_list(DISJ,literals) -> atom . DISJ separated_nonempty_list(DISJ,literals) [ IMPLIED DOT ]
##
## The known suffix of the stack is as follows:
## atom
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LPAREN VNAME COMMA RPAREN
##
## Ends in an error in state: 28.
##
## separated_nonempty_list(COMMA,term) -> term COMMA . separated_nonempty_list(COMMA,term) [ RPAREN RBRACKET ]
##
## The known suffix of the stack is as follows:
## term COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LPAREN VNAME NEQ
##
## Ends in an error in state: 27.
##
## separated_nonempty_list(COMMA,term) -> term . [ RPAREN RBRACKET ]
## separated_nonempty_list(COMMA,term) -> term . COMMA separated_nonempty_list(COMMA,term) [ RPAREN RBRACKET ]
##
## The known suffix of the stack is as follows:
## term
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LPAREN VNAME RBRACKET
##
## Ends in an error in state: 34.
##
## atom -> CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN [ IMPLIES IMPLIED DOT DISJ CONJ COMMA ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN loption(separated_nonempty_list(COMMA,term))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
## In state 27, spurious reduction of production separated_nonempty_list(COMMA,term) -> term
## In state 31, spurious reduction of production loption(separated_nonempty_list(COMMA,term)) -> separated_nonempty_list(COMMA,term)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME VNAME
##
## Ends in an error in state: 138.
##
## atom -> CNAME . [ IMPLIES IMPLIED DOT DISJ CONJ ]
## atom -> CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES IMPLIED DOT DISJ CONJ ]
## pre_decl -> CNAME . LBRACKET loption(separated_nonempty_list(COMMA,tuple)) RBRACKET [ DOT ]
##
## The known suffix of the stack is as follows:
## CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: COLON RPAREN
##
## Ends in an error in state: 132.
##
## separated_nonempty_list(CONJ,literals) -> COLON . grounding_prefix COLON atom [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON . grounding_prefix COLON NOT atom [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON . grounding_prefix COLON atom CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON . grounding_prefix COLON NOT atom CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(DISJ,literals) -> COLON . grounding_prefix COLON atom [ IMPLIED DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON . grounding_prefix COLON NOT atom [ IMPLIED DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON . grounding_prefix COLON atom DISJ separated_nonempty_list(DISJ,literals) [ IMPLIED DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON . grounding_prefix COLON NOT atom DISJ separated_nonempty_list(DISJ,literals) [ IMPLIED DOT ]
##
## The known suffix of the stack is as follows:
## COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: COLON VNAME LT VNAME COLON CNAME COMMA
##
## Ends in an error in state: 137.
##
## separated_nonempty_list(CONJ,literals) -> COLON grounding_prefix COLON atom . [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON grounding_prefix COLON atom . CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(DISJ,literals) -> COLON grounding_prefix COLON atom . [ IMPLIED DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON grounding_prefix COLON atom . DISJ separated_nonempty_list(DISJ,literals) [ IMPLIED DOT ]
##
## The known suffix of the stack is as follows:
## COLON grounding_prefix COLON atom
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production atom -> CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: COLON VNAME LT VNAME COLON CNAME CONJ VNAME
##
## Ends in an error in state: 104.
##
## separated_nonempty_list(CONJ,literals) -> COLON grounding_prefix COLON atom CONJ . separated_nonempty_list(CONJ,literals) [ IMPLIES DOT ]
##
## The known suffix of the stack is as follows:
## COLON grounding_prefix COLON atom CONJ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: COLON VNAME LT VNAME COLON CNAME DISJ VNAME
##
## Ends in an error in state: 83.
##
## separated_nonempty_list(DISJ,literals) -> COLON grounding_prefix COLON atom DISJ . separated_nonempty_list(DISJ,literals) [ IMPLIED DOT ]
##
## The known suffix of the stack is as follows:
## COLON grounding_prefix COLON atom DISJ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: COLON VNAME LT VNAME COLON NOT CNAME COMMA
##
## Ends in an error in state: 136.
##
## separated_nonempty_list(CONJ,literals) -> COLON grounding_prefix COLON NOT atom . [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON grounding_prefix COLON NOT atom . CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(DISJ,literals) -> COLON grounding_prefix COLON NOT atom . [ IMPLIED DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON grounding_prefix COLON NOT atom . DISJ separated_nonempty_list(DISJ,literals) [ IMPLIED DOT ]
##
## The known suffix of the stack is as follows:
## COLON grounding_prefix COLON NOT atom
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production atom -> CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: COLON VNAME LT VNAME COLON NOT CNAME CONJ VNAME
##
## Ends in an error in state: 98.
##
## separated_nonempty_list(CONJ,literals) -> COLON grounding_prefix COLON NOT atom CONJ . separated_nonempty_list(CONJ,literals) [ IMPLIES DOT ]
##
## The known suffix of the stack is as follows:
## COLON grounding_prefix COLON NOT atom CONJ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: COLON VNAME LT VNAME COLON NOT CNAME DISJ VNAME
##
## Ends in an error in state: 77.
##
## separated_nonempty_list(DISJ,literals) -> COLON grounding_prefix COLON NOT atom DISJ . separated_nonempty_list(DISJ,literals) [ IMPLIED DOT ]
##
## The known suffix of the stack is as follows:
## COLON grounding_prefix COLON NOT atom DISJ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: COLON VNAME LT VNAME COLON NOT VNAME
##
## Ends in an error in state: 135.
##
## separated_nonempty_list(CONJ,literals) -> COLON grounding_prefix COLON NOT . atom [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON grounding_prefix COLON NOT . atom CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(DISJ,literals) -> COLON grounding_prefix COLON NOT . atom [ IMPLIED DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON grounding_prefix COLON NOT . atom DISJ separated_nonempty_list(DISJ,literals) [ IMPLIED DOT ]
##
## The known suffix of the stack is as follows:
## COLON grounding_prefix COLON NOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: COLON VNAME LT VNAME COLON VNAME
##
## Ends in an error in state: 134.
##
## separated_nonempty_list(CONJ,literals) -> COLON grounding_prefix COLON . atom [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON grounding_prefix COLON . NOT atom [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON grounding_prefix COLON . atom CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON grounding_prefix COLON . NOT atom CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(DISJ,literals) -> COLON grounding_prefix COLON . atom [ IMPLIED DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON grounding_prefix COLON . NOT atom [ IMPLIED DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON grounding_prefix COLON . atom DISJ separated_nonempty_list(DISJ,literals) [ IMPLIED DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON grounding_prefix COLON . NOT atom DISJ separated_nonempty_list(DISJ,literals) [ IMPLIED DOT ]
##
## The known suffix of the stack is as follows:
## COLON grounding_prefix COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: COLON VNAME LT VNAME DCOLON
##
## Ends in an error in state: 133.
##
## separated_nonempty_list(CONJ,literals) -> COLON grounding_prefix . COLON atom [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON grounding_prefix . COLON NOT atom [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON grounding_prefix . COLON atom CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> COLON grounding_prefix . COLON NOT atom CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(DISJ,literals) -> COLON grounding_prefix . COLON atom [ IMPLIED DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON grounding_prefix . COLON NOT atom [ IMPLIED DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON grounding_prefix . COLON atom DISJ separated_nonempty_list(DISJ,literals) [ IMPLIED DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON grounding_prefix . COLON NOT atom DISJ separated_nonempty_list(DISJ,literals) [ IMPLIED DOT ]
##
## The known suffix of the stack is as follows:
## COLON grounding_prefix
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
## In state 57, spurious reduction of production nonempty_list(pair(loperator,term)) -> LT term
## In state 70, spurious reduction of production chain -> term nonempty_list(pair(loperator,term))
## In state 88, spurious reduction of production ground_literal -> chain
## In state 85, spurious reduction of production separated_nonempty_list(COMMA,ground_literal) -> ground_literal
## In state 72, spurious reduction of production grounding_prefix -> separated_nonempty_list(COMMA,ground_literal)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON CNAME LBRACKET RPAREN
##
## Ends in an error in state: 50.
##
## ground_literal -> CNAME LBRACKET . loption(separated_nonempty_list(COMMA,term)) RBRACKET [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## CNAME LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON CNAME LBRACKET VNAME RPAREN
##
## Ends in an error in state: 51.
##
## ground_literal -> CNAME LBRACKET loption(separated_nonempty_list(COMMA,term)) . RBRACKET [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## CNAME LBRACKET loption(separated_nonempty_list(COMMA,term))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
## In state 27, spurious reduction of production separated_nonempty_list(COMMA,term) -> term
## In state 31, spurious reduction of production loption(separated_nonempty_list(COMMA,term)) -> separated_nonempty_list(COMMA,term)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON CNAME LPAREN RBRACKET
##
## Ends in an error in state: 26.
##
## term -> CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN [ RPAREN RBRACKET NEQ LT LEQ GT GEQ EQ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON CNAME LPAREN VNAME RBRACKET
##
## Ends in an error in state: 32.
##
## term -> CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN [ RPAREN RBRACKET NEQ LT LEQ GT GEQ EQ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN loption(separated_nonempty_list(COMMA,term))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
## In state 27, spurious reduction of production separated_nonempty_list(COMMA,term) -> term
## In state 31, spurious reduction of production loption(separated_nonempty_list(COMMA,term)) -> separated_nonempty_list(COMMA,term)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON CNAME VNAME
##
## Ends in an error in state: 49.
##
## ground_literal -> CNAME . LBRACKET loption(separated_nonempty_list(COMMA,term)) RBRACKET [ DCOLON COMMA COLON ]
## term -> CNAME . [ NEQ LT LEQ GT GEQ EQ ]
## term -> CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ NEQ LT LEQ GT GEQ EQ ]
##
## The known suffix of the stack is as follows:
## CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON INT RPAREN
##
## Ends in an error in state: 53.
##
## chain -> term . nonempty_list(pair(loperator,term)) [ DCOLON COMMA COLON ]
## chain -> term . nonempty_list(pair(goperator,term)) [ DCOLON COMMA COLON ]
## ground_literal -> term . EQ term [ DCOLON COMMA COLON ]
## ground_literal -> term . NEQ term [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## term
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON INT VNAME
##
## Ends in an error in state: 30.
##
## expr -> expr . DIV expr [ RPAREN RBRACKET POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . LOG expr [ RPAREN RBRACKET POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MOD expr [ RPAREN RBRACKET POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MULT expr [ RPAREN RBRACKET POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . POW expr [ RPAREN RBRACKET POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . PLUS expr [ RPAREN RBRACKET POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MINUS expr [ RPAREN RBRACKET POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## term -> expr . [ RPAREN RBRACKET NEQ LT LEQ GT GEQ EQ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON LPAREN RPAREN
##
## Ends in an error in state: 6.
##
## expr -> LPAREN . expr RPAREN [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON LPAREN VNAME VNAME
##
## Ends in an error in state: 8.
##
## expr -> expr . DIV expr [ RPAREN POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . LOG expr [ RPAREN POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . MOD expr [ RPAREN POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . MULT expr [ RPAREN POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . POW expr [ RPAREN POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . PLUS expr [ RPAREN POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . MINUS expr [ RPAREN POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> LPAREN expr . RPAREN [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LPAREN expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON MINUS RPAREN
##
## Ends in an error in state: 5.
##
## expr -> MINUS . expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## MINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON MINUS VNAME VNAME
##
## Ends in an error in state: 24.
##
## expr -> expr . DIV expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . LOG expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MOD expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MULT expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . POW expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . PLUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MINUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> MINUS expr . [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## MINUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON NOT CNAME LBRACKET RPAREN
##
## Ends in an error in state: 46.
##
## ground_literal -> NOT CNAME LBRACKET . loption(separated_nonempty_list(COMMA,term)) RBRACKET [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## NOT CNAME LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON NOT CNAME LBRACKET VNAME RPAREN
##
## Ends in an error in state: 47.
##
## ground_literal -> NOT CNAME LBRACKET loption(separated_nonempty_list(COMMA,term)) . RBRACKET [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## NOT CNAME LBRACKET loption(separated_nonempty_list(COMMA,term))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
## In state 27, spurious reduction of production separated_nonempty_list(COMMA,term) -> term
## In state 31, spurious reduction of production loption(separated_nonempty_list(COMMA,term)) -> separated_nonempty_list(COMMA,term)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON NOT CNAME VNAME
##
## Ends in an error in state: 45.
##
## ground_literal -> NOT CNAME . LBRACKET loption(separated_nonempty_list(COMMA,term)) RBRACKET [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## NOT CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON NOT VNAME
##
## Ends in an error in state: 44.
##
## ground_literal -> NOT . CNAME LBRACKET loption(separated_nonempty_list(COMMA,term)) RBRACKET [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## NOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON RPAREN
##
## Ends in an error in state: 129.
##
## decl -> DCOLON . grounding_prefix DCOLON pre_decl DOT [ NOT IMPLIES IMPLIED HIDE FORALL EXISTS EOF DOT DCOLON COLON CNAME ]
##
## The known suffix of the stack is as follows:
## DCOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON VNAME DEFINE CNAME RPAREN
##
## Ends in an error in state: 85.
##
## separated_nonempty_list(COMMA,ground_literal) -> ground_literal . [ DCOLON COLON ]
## separated_nonempty_list(COMMA,ground_literal) -> ground_literal . COMMA separated_nonempty_list(COMMA,ground_literal) [ DCOLON COLON ]
##
## The known suffix of the stack is as follows:
## ground_literal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 25, spurious reduction of production term -> CNAME
## In state 43, spurious reduction of production ground_literal -> VNAME DEFINE term
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON VNAME DEFINE RPAREN
##
## Ends in an error in state: 42.
##
## ground_literal -> VNAME DEFINE . term [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## VNAME DEFINE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON VNAME DIV RPAREN
##
## Ends in an error in state: 18.
##
## expr -> expr DIV . expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr DIV
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON VNAME DIV VNAME VNAME
##
## Ends in an error in state: 19.
##
## expr -> expr . DIV expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr DIV expr . [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . LOG expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MOD expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MULT expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . POW expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . PLUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MINUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr DIV expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON VNAME EQ RPAREN
##
## Ends in an error in state: 68.
##
## ground_literal -> term EQ . term [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## term EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON VNAME GEQ RPAREN
##
## Ends in an error in state: 64.
##
## nonempty_list(pair(goperator,term)) -> GEQ . term [ DCOLON COMMA COLON ]
## nonempty_list(pair(goperator,term)) -> GEQ . term nonempty_list(pair(goperator,term)) [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## GEQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON VNAME GEQ VNAME RPAREN
##
## Ends in an error in state: 65.
##
## nonempty_list(pair(goperator,term)) -> GEQ term . [ DCOLON COMMA COLON ]
## nonempty_list(pair(goperator,term)) -> GEQ term . nonempty_list(pair(goperator,term)) [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## GEQ term
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON VNAME GT RPAREN
##
## Ends in an error in state: 62.
##
## nonempty_list(pair(goperator,term)) -> GT . term [ DCOLON COMMA COLON ]
## nonempty_list(pair(goperator,term)) -> GT . term nonempty_list(pair(goperator,term)) [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## GT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON VNAME GT VNAME RPAREN
##
## Ends in an error in state: 63.
##
## nonempty_list(pair(goperator,term)) -> GT term . [ DCOLON COMMA COLON ]
## nonempty_list(pair(goperator,term)) -> GT term . nonempty_list(pair(goperator,term)) [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## GT term
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON VNAME LEQ RPAREN
##
## Ends in an error in state: 58.
##
## nonempty_list(pair(loperator,term)) -> LEQ . term [ DCOLON COMMA COLON ]
## nonempty_list(pair(loperator,term)) -> LEQ . term nonempty_list(pair(loperator,term)) [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LEQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON VNAME LEQ VNAME RPAREN
##
## Ends in an error in state: 59.
##
## nonempty_list(pair(loperator,term)) -> LEQ term . [ DCOLON COMMA COLON ]
## nonempty_list(pair(loperator,term)) -> LEQ term . nonempty_list(pair(loperator,term)) [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LEQ term
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON VNAME LOG RPAREN
##
## Ends in an error in state: 12.
##
## expr -> expr LOG . expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr LOG
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON VNAME LOG VNAME VNAME
##
## Ends in an error in state: 13.
##
## expr -> expr . DIV expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . LOG expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr LOG expr . [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MOD expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MULT expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . POW expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . PLUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MINUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr LOG expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON VNAME LT RPAREN
##
## Ends in an error in state: 56.
##
## nonempty_list(pair(loperator,term)) -> LT . term [ DCOLON COMMA COLON ]
## nonempty_list(pair(loperator,term)) -> LT . term nonempty_list(pair(loperator,term)) [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON VNAME LT VNAME COLON
##
## Ends in an error in state: 130.
##
## decl -> DCOLON grounding_prefix . DCOLON pre_decl DOT [ NOT IMPLIES IMPLIED HIDE FORALL EXISTS EOF DOT DCOLON COLON CNAME ]
##
## The known suffix of the stack is as follows:
## DCOLON grounding_prefix
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
## In state 57, spurious reduction of production nonempty_list(pair(loperator,term)) -> LT term
## In state 70, spurious reduction of production chain -> term nonempty_list(pair(loperator,term))
## In state 88, spurious reduction of production ground_literal -> chain
## In state 85, spurious reduction of production separated_nonempty_list(COMMA,ground_literal) -> ground_literal
## In state 72, spurious reduction of production grounding_prefix -> separated_nonempty_list(COMMA,ground_literal)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON VNAME LT VNAME COMMA RPAREN
##
## Ends in an error in state: 86.
##
## separated_nonempty_list(COMMA,ground_literal) -> ground_literal COMMA . separated_nonempty_list(COMMA,ground_literal) [ DCOLON COLON ]
##
## The known suffix of the stack is as follows:
## ground_literal COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON VNAME LT VNAME DCOLON IMPLIES CNAME IMPLIED
##
## Ends in an error in state: 153.
##
## decl -> DCOLON grounding_prefix DCOLON pre_decl . DOT [ NOT IMPLIES IMPLIED HIDE FORALL EXISTS EOF DOT DCOLON COLON CNAME ]
##
## The known suffix of the stack is as follows:
## DCOLON grounding_prefix DCOLON pre_decl
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production atom -> CNAME
## In state 79, spurious reduction of production separated_nonempty_list(DISJ,literals) -> atom
## In state 151, spurious reduction of production loption(separated_nonempty_list(DISJ,literals)) -> separated_nonempty_list(DISJ,literals)
## In state 155, spurious reduction of production clause_head -> loption(separated_nonempty_list(DISJ,literals))
## In state 164, spurious reduction of production clause_part -> clause_body IMPLIES clause_head
## In state 158, spurious reduction of production pre_decl -> clause_part
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON VNAME LT VNAME DCOLON VNAME
##
## Ends in an error in state: 131.
##
## decl -> DCOLON grounding_prefix DCOLON . pre_decl DOT [ NOT IMPLIES IMPLIED HIDE FORALL EXISTS EOF DOT DCOLON COLON CNAME ]
##
## The known suffix of the stack is as follows:
## DCOLON grounding_prefix DCOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON VNAME LT VNAME RPAREN
##
## Ends in an error in state: 57.
##
## nonempty_list(pair(loperator,term)) -> LT term . [ DCOLON COMMA COLON ]
## nonempty_list(pair(loperator,term)) -> LT term . nonempty_list(pair(loperator,term)) [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LT term
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON VNAME MINUS RPAREN
##
## Ends in an error in state: 22.
##
## expr -> expr MINUS . expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr MINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON VNAME MINUS VNAME VNAME
##
## Ends in an error in state: 23.
##
## expr -> expr . DIV expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . LOG expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MOD expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MULT expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . POW expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . PLUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MINUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr MINUS expr . [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr MINUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON VNAME MOD RPAREN
##
## Ends in an error in state: 20.
##
## expr -> expr MOD . expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr MOD
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON VNAME MOD VNAME VNAME
##
## Ends in an error in state: 21.
##
## expr -> expr . DIV expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . LOG expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MOD expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr MOD expr . [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MULT expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . POW expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . PLUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MINUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr MOD expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON VNAME MULT RPAREN
##
## Ends in an error in state: 16.
##
## expr -> expr MULT . expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr MULT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON VNAME MULT VNAME VNAME
##
## Ends in an error in state: 17.
##
## expr -> expr . DIV expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . LOG expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MOD expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MULT expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr MULT expr . [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . POW expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . PLUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MINUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr MULT expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON VNAME NEQ RPAREN
##
## Ends in an error in state: 54.
##
## ground_literal -> term NEQ . term [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## term NEQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON VNAME PLUS RPAREN
##
## Ends in an error in state: 14.
##
## expr -> expr PLUS . expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr PLUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON VNAME PLUS VNAME VNAME
##
## Ends in an error in state: 15.
##
## expr -> expr . DIV expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . LOG expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MOD expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MULT expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . POW expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . PLUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr PLUS expr . [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MINUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr PLUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON VNAME POW RPAREN
##
## Ends in an error in state: 10.
##
## expr -> expr POW . expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr POW
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON VNAME POW VNAME VNAME
##
## Ends in an error in state: 11.
##
## expr -> expr . DIV expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . LOG expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MOD expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MULT expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . POW expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr POW expr . [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . PLUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MINUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr POW expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON VNAME VNAME
##
## Ends in an error in state: 41.
##
## expr -> VNAME . [ POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV ]
## ground_literal -> VNAME . DEFINE term [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## VNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DOT VNAME
##
## Ends in an error in state: 171.
##
## list(decl) -> decl . list(decl) [ EOF ]
##
## The known suffix of the stack is as follows:
## decl
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: EXISTS LBRACKET RPAREN
##
## Ends in an error in state: 125.
##
## pre_decl -> EXISTS LBRACKET . expr RBRACKET separated_nonempty_list(COMMA,atom) [ DOT ]
##
## The known suffix of the stack is as follows:
## EXISTS LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: EXISTS LBRACKET VNAME RBRACKET VNAME
##
## Ends in an error in state: 127.
##
## pre_decl -> EXISTS LBRACKET expr RBRACKET . separated_nonempty_list(COMMA,atom) [ DOT ]
##
## The known suffix of the stack is as follows:
## EXISTS LBRACKET expr RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: EXISTS LBRACKET VNAME VNAME
##
## Ends in an error in state: 126.
##
## expr -> expr . DIV expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . LOG expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . MOD expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . MULT expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . POW expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . PLUS expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . MINUS expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## pre_decl -> EXISTS LBRACKET expr . RBRACKET separated_nonempty_list(COMMA,atom) [ DOT ]
##
## The known suffix of the stack is as follows:
## EXISTS LBRACKET expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: EXISTS VNAME
##
## Ends in an error in state: 124.
##
## pre_decl -> EXISTS . LBRACKET expr RBRACKET separated_nonempty_list(COMMA,atom) [ DOT ]
##
## The known suffix of the stack is as follows:
## EXISTS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: FORALL LBRACKET RPAREN
##
## Ends in an error in state: 117.
##
## pre_decl -> FORALL LBRACKET . expr RBRACKET separated_nonempty_list(COMMA,atom) [ DOT ]
##
## The known suffix of the stack is as follows:
## FORALL LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: FORALL LBRACKET VNAME RBRACKET CNAME COMMA VNAME
##
## Ends in an error in state: 122.
##
## separated_nonempty_list(COMMA,atom) -> atom COMMA . separated_nonempty_list(COMMA,atom) [ DOT ]
##
## The known suffix of the stack is as follows:
## atom COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: FORALL LBRACKET VNAME RBRACKET CNAME IMPLIES
##
## Ends in an error in state: 121.
##
## separated_nonempty_list(COMMA,atom) -> atom . [ DOT ]
## separated_nonempty_list(COMMA,atom) -> atom . COMMA separated_nonempty_list(COMMA,atom) [ DOT ]
##
## The known suffix of the stack is as follows:
## atom
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production atom -> CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: FORALL LBRACKET VNAME RBRACKET VNAME
##
## Ends in an error in state: 119.
##
## pre_decl -> FORALL LBRACKET expr RBRACKET . separated_nonempty_list(COMMA,atom) [ DOT ]
##
## The known suffix of the stack is as follows:
## FORALL LBRACKET expr RBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: FORALL LBRACKET VNAME VNAME
##
## Ends in an error in state: 118.
##
## expr -> expr . DIV expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . LOG expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . MOD expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . MULT expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . POW expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . PLUS expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . MINUS expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## pre_decl -> FORALL LBRACKET expr . RBRACKET separated_nonempty_list(COMMA,atom) [ DOT ]
##
## The known suffix of the stack is as follows:
## FORALL LBRACKET expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: FORALL VNAME
##
## Ends in an error in state: 116.
##
## pre_decl -> FORALL . LBRACKET expr RBRACKET separated_nonempty_list(COMMA,atom) [ DOT ]
##
## The known suffix of the stack is as follows:
## FORALL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: HIDE CNAME COMMA VNAME
##
## Ends in an error in state: 113.
##
## separated_nonempty_list(COMMA,literal) -> atom COMMA . separated_nonempty_list(COMMA,literal) [ DOT ]
##
## The known suffix of the stack is as follows:
## atom COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: HIDE CNAME IMPLIES
##
## Ends in an error in state: 112.
##
## separated_nonempty_list(COMMA,literal) -> atom . [ DOT ]
## separated_nonempty_list(COMMA,literal) -> atom . COMMA separated_nonempty_list(COMMA,literal) [ DOT ]
##
## The known suffix of the stack is as follows:
## atom
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production atom -> CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: HIDE CNAME VNAME
##
## Ends in an error in state: 2.
##
## atom -> CNAME . [ IMPLIES IMPLIED DOT DISJ CONJ COMMA ]
## atom -> CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES IMPLIED DOT DISJ CONJ COMMA ]
##
## The known suffix of the stack is as follows:
## CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: HIDE NOT CNAME COMMA VNAME
##
## Ends in an error in state: 110.
##
## separated_nonempty_list(COMMA,literal) -> NOT atom COMMA . separated_nonempty_list(COMMA,literal) [ DOT ]
##
## The known suffix of the stack is as follows:
## NOT atom COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: HIDE NOT CNAME IMPLIES
##
## Ends in an error in state: 109.
##
## separated_nonempty_list(COMMA,literal) -> NOT atom . [ DOT ]
## separated_nonempty_list(COMMA,literal) -> NOT atom . COMMA separated_nonempty_list(COMMA,literal) [ DOT ]
##
## The known suffix of the stack is as follows:
## NOT atom
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production atom -> CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: HIDE NOT VNAME
##
## Ends in an error in state: 108.
##
## separated_nonempty_list(COMMA,literal) -> NOT . atom [ DOT ]
## separated_nonempty_list(COMMA,literal) -> NOT . atom COMMA separated_nonempty_list(COMMA,literal) [ DOT ]
##
## The known suffix of the stack is as follows:
## NOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: HIDE VNAME
##
## Ends in an error in state: 107.
##
## hide_decl -> HIDE . separated_nonempty_list(COMMA,literal) [ DOT ]
##
## The known suffix of the stack is as follows:
## HIDE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIED CNAME IMPLIED
##
## Ends in an error in state: 100.
##
## separated_nonempty_list(CONJ,literals) -> atom . [ IMPLIES DOT ]
## separated_nonempty_list(CONJ,literals) -> atom . CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES DOT ]
##
## The known suffix of the stack is as follows:
## atom
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production atom -> CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIED CNAME IMPLIES
##
## Ends in an error in state: 166.
##
## decl -> pre_decl . DOT [ NOT IMPLIES IMPLIED HIDE FORALL EXISTS EOF DOT DCOLON COLON CNAME ]
##
## The known suffix of the stack is as follows:
## pre_decl
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production atom -> CNAME
## In state 100, spurious reduction of production separated_nonempty_list(CONJ,literals) -> atom
## In state 152, spurious reduction of production loption(separated_nonempty_list(CONJ,literals)) -> separated_nonempty_list(CONJ,literals)
## In state 156, spurious reduction of production clause_body -> loption(separated_nonempty_list(CONJ,literals))
## In state 161, spurious reduction of production clause_part -> clause_head IMPLIED clause_body
## In state 158, spurious reduction of production pre_decl -> clause_part
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIED COLON RPAREN
##
## Ends in an error in state: 93.
##
## separated_nonempty_list(CONJ,literals) -> COLON . grounding_prefix COLON atom [ IMPLIES DOT ]
## separated_nonempty_list(CONJ,literals) -> COLON . grounding_prefix COLON NOT atom [ IMPLIES DOT ]
## separated_nonempty_list(CONJ,literals) -> COLON . grounding_prefix COLON atom CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES DOT ]
## separated_nonempty_list(CONJ,literals) -> COLON . grounding_prefix COLON NOT atom CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES DOT ]
##
## The known suffix of the stack is as follows:
## COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIED COLON VNAME LT VNAME COLON CNAME IMPLIED
##
## Ends in an error in state: 103.
##
## separated_nonempty_list(CONJ,literals) -> COLON grounding_prefix COLON atom . [ IMPLIES DOT ]
## separated_nonempty_list(CONJ,literals) -> COLON grounding_prefix COLON atom . CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES DOT ]
##
## The known suffix of the stack is as follows:
## COLON grounding_prefix COLON atom
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production atom -> CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIED COLON VNAME LT VNAME COLON NOT CNAME IMPLIED
##
## Ends in an error in state: 97.
##
## separated_nonempty_list(CONJ,literals) -> COLON grounding_prefix COLON NOT atom . [ IMPLIES DOT ]
## separated_nonempty_list(CONJ,literals) -> COLON grounding_prefix COLON NOT atom . CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES DOT ]
##
## The known suffix of the stack is as follows:
## COLON grounding_prefix COLON NOT atom
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production atom -> CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIED COLON VNAME LT VNAME COLON NOT VNAME
##
## Ends in an error in state: 96.
##
## separated_nonempty_list(CONJ,literals) -> COLON grounding_prefix COLON NOT . atom [ IMPLIES DOT ]
## separated_nonempty_list(CONJ,literals) -> COLON grounding_prefix COLON NOT . atom CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES DOT ]
##
## The known suffix of the stack is as follows:
## COLON grounding_prefix COLON NOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIED COLON VNAME LT VNAME COLON VNAME
##
## Ends in an error in state: 95.
##
## separated_nonempty_list(CONJ,literals) -> COLON grounding_prefix COLON . atom [ IMPLIES DOT ]
## separated_nonempty_list(CONJ,literals) -> COLON grounding_prefix COLON . NOT atom [ IMPLIES DOT ]
## separated_nonempty_list(CONJ,literals) -> COLON grounding_prefix COLON . atom CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES DOT ]
## separated_nonempty_list(CONJ,literals) -> COLON grounding_prefix COLON . NOT atom CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES DOT ]
##
## The known suffix of the stack is as follows:
## COLON grounding_prefix COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIED COLON VNAME LT VNAME DCOLON
##
## Ends in an error in state: 94.
##
## separated_nonempty_list(CONJ,literals) -> COLON grounding_prefix . COLON atom [ IMPLIES DOT ]
## separated_nonempty_list(CONJ,literals) -> COLON grounding_prefix . COLON NOT atom [ IMPLIES DOT ]
## separated_nonempty_list(CONJ,literals) -> COLON grounding_prefix . COLON atom CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES DOT ]
## separated_nonempty_list(CONJ,literals) -> COLON grounding_prefix . COLON NOT atom CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES DOT ]
##
## The known suffix of the stack is as follows:
## COLON grounding_prefix
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 30, spurious reduction of production term -> expr
## In state 57, spurious reduction of production nonempty_list(pair(loperator,term)) -> LT term
## In state 70, spurious reduction of production chain -> term nonempty_list(pair(loperator,term))
## In state 88, spurious reduction of production ground_literal -> chain
## In state 85, spurious reduction of production separated_nonempty_list(COMMA,ground_literal) -> ground_literal
## In state 72, spurious reduction of production grounding_prefix -> separated_nonempty_list(COMMA,ground_literal)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIED NOT CNAME IMPLIED
##
## Ends in an error in state: 92.
##
## separated_nonempty_list(CONJ,literals) -> NOT atom . [ IMPLIES DOT ]
## separated_nonempty_list(CONJ,literals) -> NOT atom . CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES DOT ]
##
## The known suffix of the stack is as follows:
## NOT atom
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production atom -> CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIED NOT VNAME
##
## Ends in an error in state: 91.
##
## separated_nonempty_list(CONJ,literals) -> NOT . atom [ IMPLIES DOT ]
## separated_nonempty_list(CONJ,literals) -> NOT . atom CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES DOT ]
##
## The known suffix of the stack is as follows:
## NOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIED VNAME
##
## Ends in an error in state: 160.
##
## clause_part -> clause_head IMPLIED . clause_body [ DOT ]
##
## The known suffix of the stack is as follows:
## clause_head IMPLIED
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIES CNAME IMPLIES
##
## Ends in an error in state: 79.
##
## separated_nonempty_list(DISJ,literals) -> atom . [ IMPLIED DOT ]
## separated_nonempty_list(DISJ,literals) -> atom . DISJ separated_nonempty_list(DISJ,literals) [ IMPLIED DOT ]
##
## The known suffix of the stack is as follows:
## atom
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production atom -> CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIES COLON RPAREN
##
## Ends in an error in state: 40.
##
## separated_nonempty_list(DISJ,literals) -> COLON . grounding_prefix COLON atom [ IMPLIED DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON . grounding_prefix COLON NOT atom [ IMPLIED DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON . grounding_prefix COLON atom DISJ separated_nonempty_list(DISJ,literals) [ IMPLIED DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON . grounding_prefix COLON NOT atom DISJ separated_nonempty_list(DISJ,literals) [ IMPLIED DOT ]
##
## The known suffix of the stack is as follows:
## COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIES COLON VNAME DEFINE CNAME COLON CNAME IMPLIES
##
## Ends in an error in state: 82.
##
## separated_nonempty_list(DISJ,literals) -> COLON grounding_prefix COLON atom . [ IMPLIED DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON grounding_prefix COLON atom . DISJ separated_nonempty_list(DISJ,literals) [ IMPLIED DOT ]
##
## The known suffix of the stack is as follows:
## COLON grounding_prefix COLON atom
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production atom -> CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIES COLON VNAME DEFINE CNAME COLON NOT CNAME IMPLIES
##
## Ends in an error in state: 76.
##
## separated_nonempty_list(DISJ,literals) -> COLON grounding_prefix COLON NOT atom . [ IMPLIED DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON grounding_prefix COLON NOT atom . DISJ separated_nonempty_list(DISJ,literals) [ IMPLIED DOT ]
##
## The known suffix of the stack is as follows:
## COLON grounding_prefix COLON NOT atom
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production atom -> CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIES COLON VNAME DEFINE CNAME COLON NOT VNAME
##
## Ends in an error in state: 75.
##
## separated_nonempty_list(DISJ,literals) -> COLON grounding_prefix COLON NOT . atom [ IMPLIED DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON grounding_prefix COLON NOT . atom DISJ separated_nonempty_list(DISJ,literals) [ IMPLIED DOT ]
##
## The known suffix of the stack is as follows:
## COLON grounding_prefix COLON NOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIES COLON VNAME DEFINE CNAME COLON VNAME
##
## Ends in an error in state: 74.
##
## separated_nonempty_list(DISJ,literals) -> COLON grounding_prefix COLON . atom [ IMPLIED DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON grounding_prefix COLON . NOT atom [ IMPLIED DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON grounding_prefix COLON . atom DISJ separated_nonempty_list(DISJ,literals) [ IMPLIED DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON grounding_prefix COLON . NOT atom DISJ separated_nonempty_list(DISJ,literals) [ IMPLIED DOT ]
##
## The known suffix of the stack is as follows:
## COLON grounding_prefix COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIES COLON VNAME DEFINE CNAME DCOLON
##
## Ends in an error in state: 73.
##
## separated_nonempty_list(DISJ,literals) -> COLON grounding_prefix . COLON atom [ IMPLIED DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON grounding_prefix . COLON NOT atom [ IMPLIED DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON grounding_prefix . COLON atom DISJ separated_nonempty_list(DISJ,literals) [ IMPLIED DOT ]
## separated_nonempty_list(DISJ,literals) -> COLON grounding_prefix . COLON NOT atom DISJ separated_nonempty_list(DISJ,literals) [ IMPLIED DOT ]
##
## The known suffix of the stack is as follows:
## COLON grounding_prefix
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 25, spurious reduction of production term -> CNAME
## In state 43, spurious reduction of production ground_literal -> VNAME DEFINE term
## In state 85, spurious reduction of production separated_nonempty_list(COMMA,ground_literal) -> ground_literal
## In state 72, spurious reduction of production grounding_prefix -> separated_nonempty_list(COMMA,ground_literal)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIES NOT CNAME IMPLIES
##
## Ends in an error in state: 39.
##
## separated_nonempty_list(DISJ,literals) -> NOT atom . [ IMPLIED DOT ]
## separated_nonempty_list(DISJ,literals) -> NOT atom . DISJ separated_nonempty_list(DISJ,literals) [ IMPLIED DOT ]
##
## The known suffix of the stack is as follows:
## NOT atom
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production atom -> CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIES NOT VNAME
##
## Ends in an error in state: 38.
##
## separated_nonempty_list(DISJ,literals) -> NOT . atom [ IMPLIED DOT ]
## separated_nonempty_list(DISJ,literals) -> NOT . atom DISJ separated_nonempty_list(DISJ,literals) [ IMPLIED DOT ]
##
## The known suffix of the stack is as follows:
## NOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIES VNAME
##
## Ends in an error in state: 163.
##
## clause_part -> clause_body IMPLIES . clause_head [ DOT ]
##
## The known suffix of the stack is as follows:
## clause_body IMPLIES
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: NOT CNAME COMMA
##
## Ends in an error in state: 36.
##
## separated_nonempty_list(CONJ,literals) -> NOT atom . [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> NOT atom . CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(DISJ,literals) -> NOT atom . [ IMPLIED DOT ]
## separated_nonempty_list(DISJ,literals) -> NOT atom . DISJ separated_nonempty_list(DISJ,literals) [ IMPLIED DOT ]
##
## The known suffix of the stack is as follows:
## NOT atom
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 2, spurious reduction of production atom -> CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: NOT CNAME CONJ VNAME
##
## Ends in an error in state: 90.
##
## separated_nonempty_list(CONJ,literals) -> NOT atom CONJ . separated_nonempty_list(CONJ,literals) [ IMPLIES DOT ]
##
## The known suffix of the stack is as follows:
## NOT atom CONJ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: NOT CNAME DISJ VNAME
##
## Ends in an error in state: 37.
##
## separated_nonempty_list(DISJ,literals) -> NOT atom DISJ . separated_nonempty_list(DISJ,literals) [ IMPLIED DOT ]
##
## The known suffix of the stack is as follows:
## NOT atom DISJ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: NOT VNAME
##
## Ends in an error in state: 1.
##
## separated_nonempty_list(CONJ,literals) -> NOT . atom [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> NOT . atom CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(DISJ,literals) -> NOT . atom [ IMPLIED DOT ]
## separated_nonempty_list(DISJ,literals) -> NOT . atom DISJ separated_nonempty_list(DISJ,literals) [ IMPLIED DOT ]
##
## The known suffix of the stack is as follows:
## NOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME
##
## Ends in an error in state: 0.
##
## file' -> . file [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

