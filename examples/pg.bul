#const final=3. %% depth d.
#const v=3. %% depth d.

edge[0,0,0].
edge[0,0,1].
edge[0,1,2].
edge[0,1,3].
edge[1,0,0].
edge[1,0,1].
edge[1,1,2].
edge[1,1,3].

t[0..final]. % coming from the outside !!!
turn[1,1].
turn[2,0].
turn[2,1].
%turn[T, T#mod2]. coming from the outside!

black[1].
white[0].
player[0..1].

%input edge[A,E,V]. Agent A\in{0,1} has winning edge E with vertex V
edge[_,_,V] => vertex[V]. 
edge[A,E,_] => edgeId[A,E]. 

first[0]. %vertices going from 0..v
last[v].
last[L], vertex[V], vertex[I], 2**I < L => choose[V,I,(V/(2**I))#mod2]. 
choose[_,I,_] => bit[I]. 

t[T]                             => #exist(T) , time(T).  %1
white[A], turn[T,A], bit[I]      => #forall(T), moveL(I,T). 
vertex[V], t[T]                  => #exist(T) , move(V,T).    
vertex[V], t[T], player[A]       => #exist(T) , board(A,V,T).
vertex[V], t[T]                  => #exist(T) , occupied(V,T).
vertex[V], t[T], player[A], T>0  => #exist(T) , ladder(V,T).
black[A], edgeId[A,E]            => #exist(final), win(E).  %2 

~time(T), time(T+1). %3
 board(_,_,0). %4
vertex[V], t[T] => ~board(A,V,T):player[A]. %5
~board(A,V,T), board(A,V,T+1). %6
time(T), board(A,V,T-1), ~board(A,V,T+1). %7

~board(_,V,T), occupied(V,T). %9  (8 follows from 4 & 10)
~occupied(V,T), board(A,V,T) : player[A]. %10 

time(T), ~move(_,T). %11
~occupied(V,T-1), ~move(V,T).  %12
turn[T,A] => board(A,V,T), ~move(V,T). %13 

vertex[V] => ~moveL(I,T):choose[V,I,1], moveL(I,T):choose[V,I,0], 
    ~time(T), occupied(V,T-1), move(V,T). %14

move(V,T), board(A,V,T-1), ~board(A,V,T). %15
player[A], t[T], ~turn[A,T] => board(A,V,T-1), ~board(A,V,T). %16

black[A] => win(E):edgeId[A,E]. %17
black[A], edge[A,E,V] => ~win(E), board(A,V,final). %18
white[A] => ~board(A,V,final):edge[A,E,V]. %19
black[A], edgeId[A,E] => win(E), ~board(A,V,final):edge[A,E,V]. %20

~ladder(V,T), ladder(V+1,T). %22
~move(V+1,T),~ladder(V,T). %22
~move(V,T), ladder(V,T). %23
move(I+1,T), ladder(I,T), ~ladder(I+1,T). %25

first[V] => move(V,T), ladder(V,T). %24
last[V] => ~time(T), ladder(V,T). %26
